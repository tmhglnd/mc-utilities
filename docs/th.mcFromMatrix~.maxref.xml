<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<c74object name="th.mcFromMatrix~">

	<digest>
		Write a jit.matrix to an mc signal
	</digest>

	<description>
		Write a jit.matrix to an mc signal
		<br /><br />
		Output values from a 1-plane 1-dimensional jitter matrix as an mc signal. One argument needed, the name of the jit.matrix to read from. Turn DSP on/off and make sure you bang the values in the matrix in your main patch for the effect to take place. Optional second argument is the plane number to read from.	
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">Timo Hoogland</metadata>
		<metadata name="tag">thModules</metadata>
		<metadata name="tag">mc</metadata>
		<metadata name="tag">matrix</metadata>
		<metadata name="tag">jitter</metadata>
		<metadata name="tag">msp</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<!-- <inlet id="0" type="signal">
			<digest>Multi-channel signal input</digest>
		</inlet> -->
		<!-- <inlet id="1" type="int">
			<digest></digest>
		</inlet> -->
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="signal">
			<digest>Multi-channel signal output</digest>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="matrix_name" optional="0" type="symbol">
			<digest>
				name of the jit.matrix to access and read from.
			</digest>
			<description>
				name of the jit.matrix to access and read from.
			</description>
		</objarg>
		<objarg name="channels" optional="0" type="int">
			<digest>
				number of channels to output.
			</digest>
			<description>
				number of channels to output. This is usually the dimension of the matrix that is read from.
			</description>
		</objarg>
		<objarg name="plane" optional="1" type="int">
			<digest>
				plane number from jit.matrix to read from (default = 0).
			</digest>
			<description>
				plane number from jit.matrix to read from (default = 0).
			</description>
		</objarg>
	</objarglist>

	<!--MESSAGES-->
	<methodlist>
		<!-- <method name="signal">
			<arglist>
				<arg name="signal" optional="0" type="signal" />
			</arglist>
			<digest>
				Multi-channel signal input
			</digest>
			<description>
				Multi-channel signal to write to matrix
			</description>
		</method> -->
		<!-- <method name="int">
			<arglist>
				<arg name="int" optional="0" type="int" />
			</arglist>
			<digest>
				Function depends on inlet
			</digest>
			<description>
				Inlet 0 (hot): <br />
				@listmode = 1: The amount of 3bonacci numbers to output in a list of strings or integers. <br />
				@listmode = 0: The nth-3bonacci number to output.
				<br />
				<br />
				Inlet 1 (hot): The value that sets the modulo operation on the numbers. Must be greater than 1, otherwise not applied(default = 0).
			</description>
		</method> -->
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<!-- <attribute name='listmode' get='0' set='1' type='int' size='2' >
			<digest>switch between sequence or nth-3bonacci</digest>
			<description>
				When listmode = 1: Output the sequence length specified. <br />
				When listmode = 0: Output the nth-3bonacci number.
			</description>
		</attribute> -->
	</attributelist>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="th.mcFromMatrix~"/>
		<seealso name="th.mcToMatrix~"/>
		<seealso name="th.mcScramble~"/>
		<seealso name="th.mcIndexmap~"/>
		<seealso name="th.mcRev~"/>
		<seealso name="th.mcRot~"/>
		<seealso name="th.mcNth~"/>
		<seealso name="th.mcMth~"/>
		<seealso name="th.mcChannelcount~"/>
		<seealso name="jit.poke~"/>
		<seealso name="jit.matrix"/>
		<seealso name="jit.cellblock"/>
		<seealso name="dspstate~"/>
	</seealsolist>
</c74object>
